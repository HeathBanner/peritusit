{"ast":null,"code":"import _defineProperty from\"/Users/God/Desktop/github/peritusit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useContext}from'react';import{MediaContext}from'../../context/Media';import{makeStyles}from'@material-ui/core/styles';import{Grid,Typography,Divider}from'@material-ui/core';var useStyles=makeStyles(function(theme){var _container;return{container:(_container={display:'flex',justifyContent:'center',alignItems:'center',alignContent:'center',flexWrap:'wrap',paddingTop:100,backgroundColor:'white',padding:'60px 25%'},_defineProperty(_container,theme.breakpoints.down('md'),{padding:'40px 15%'}),_defineProperty(_container,theme.breakpoints.down('xs'),{padding:40}),_container),divider:{marginBlockStart:'0.5em',width:'60%',backgroundColor:'rgb(0, 0, 0, 0.2)',marginBottom:40},listHeaders:{width:'100%'},listBodys:{width:'100%',marginBottom:10}};});var desktopSystems=[{text:\"Windows 10\"},{text:\"Windows 8 & 8.1\"},{text:\"Windows 7\"}];var serverSystems=[{text:\"Windows Server 2016\"},{text:\"Windows Server 2012\"},{text:\"Windows Server 2008\"},{text:\"Windows Terminal Server/Remote Desktop Services\"},{text:\"Windows Hyper V\"}];var microsoftApps=[{text:\"Office 365 and 2013\"},{text:\"Office 2010\"}];var miscApps=[{text:\"QuickBooks\"},{text:\"ACT\"},{text:\"Time Matters\"},{text:\"Sage 50\"}];var TechList=function TechList(){var classes=useStyles();var media=useContext(MediaContext);return React.createElement(Grid,{className:classes.container,item:true,xs:12},React.createElement(Typography,{className:classes.listHeaders,variant:media.xs?'h5':'h4',align:\"center\"},\"Desktop Operating Systems\"),React.createElement(Divider,{className:classes.divider}),desktopSystems.map(function(item,index){return React.createElement(Typography,{className:classes.listBodys,align:\"center\",color:\"textSecondary\",variant:media.xs?'body1':'h6',key:\"desktop \".concat(index)},item.text);}),React.createElement(Typography,{className:classes.listHeaders,style:{marginTop:60},variant:media.xs?'h5':'h4',align:\"center\"},\"Server Operating Systems\"),React.createElement(Divider,{className:classes.divider}),serverSystems.map(function(item,index){return React.createElement(Typography,{className:classes.listBodys,align:\"center\",color:\"textSecondary\",variant:media.xs?'body1':'h6',key:\"server \".concat(index)},item.text);}),React.createElement(Typography,{className:classes.listHeaders,style:{marginTop:60},variant:media.xs?'h5':'h4',align:\"center\"},\"Microsoft Applications\"),React.createElement(Divider,{className:classes.divider}),microsoftApps.map(function(item,index){return React.createElement(Typography,{className:classes.listBodys,align:\"center\",color:\"textSecondary\",variant:media.xs?'body1':'h6',key:\"micro \".concat(index)},item.text);}),React.createElement(Typography,{className:classes.listHeaders,style:{marginTop:60},variant:media.xs?'h5':'h4',align:\"center\"},\"Miscellaneous Applications\"),React.createElement(Divider,{className:classes.divider}),miscApps.map(function(item,index){return React.createElement(Typography,{className:classes.listBodys,align:\"center\",color:\"textSecondary\",variant:media.xs?'body1':'h6',key:\"misc \".concat(index)},item.text);}));};export default TechList;","map":{"version":3,"sources":["/Users/God/Desktop/github/peritusit/client/src/components/Tech/TechList.js"],"names":["React","useContext","MediaContext","makeStyles","Grid","Typography","Divider","useStyles","theme","container","display","justifyContent","alignItems","alignContent","flexWrap","paddingTop","backgroundColor","padding","breakpoints","down","divider","marginBlockStart","width","marginBottom","listHeaders","listBodys","desktopSystems","text","serverSystems","microsoftApps","miscApps","TechList","classes","media","xs","map","item","index","marginTop"],"mappings":"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","sourcesContent":["import React, {\n    useContext,\n} from 'react';\n\nimport { MediaContext } from '../../context/Media';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    Typography,\n    Divider,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n        paddingTop: 100,\n        backgroundColor: 'white',\n        padding: '60px 25%',\n        [theme.breakpoints.down('md')]: {\n            padding: '40px 15%',\n        },\n        [theme.breakpoints.down('xs')]: {\n            padding: 40,\n        },\n    },\n    divider: {\n        marginBlockStart: '0.5em',\n        width: '60%',\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n        marginBottom: 40,\n    },\n    listHeaders: {\n        width: '100%'\n    },\n    listBodys: {\n        width: '100%',\n        marginBottom: 10,\n    },\n}));\n\nconst desktopSystems = [\n    {\n        text: `Windows 10`,\n    },\n    {\n        text: `Windows 8 & 8.1`,\n    },\n    {\n        text: `Windows 7`,\n    },\n];\n\nconst serverSystems = [\n    {\n        text: `Windows Server 2016`,\n    },\n    {\n        text: `Windows Server 2012`,\n    },\n    {\n        text: `Windows Server 2008`,\n    },\n    {\n        text: `Windows Terminal Server/Remote Desktop Services`,\n    },\n    {\n        text: `Windows Hyper V`,\n    },\n];\n\nconst microsoftApps = [\n    {\n        text: `Office 365 and 2013`,\n    },\n    {\n        text:  `Office 2010`,\n    },\n];\n\nconst miscApps = [\n    {\n        text:  `QuickBooks`,\n    },\n    {\n        text: `ACT`,\n    },\n    {\n        text: `Time Matters`,\n    },\n    {\n        text:  `Sage 50`,\n    },\n];\n\nconst TechList = () => {\n\n    const classes = useStyles();\n    const media = useContext(MediaContext);\n\n    return (\n        <Grid className={classes.container} item xs={12}>\n\n            <Typography\n                className={classes.listHeaders}\n                variant={media.xs ? 'h5' : 'h4'}\n                align=\"center\"\n            >\n                Desktop Operating Systems\n            </Typography>\n\n            <Divider className={classes.divider} />\n\n            {\n                desktopSystems.map((item, index) => {\n                    return (\n                        <Typography\n                            className={classes.listBodys}\n                            align=\"center\"\n                            color=\"textSecondary\"\n                            variant={media.xs ? 'body1' : 'h6'}\n                            key={`desktop ${index}`}\n                        >\n                            {item.text}\n                        </Typography>\n                    );\n                })\n            }\n\n            <Typography\n                className={classes.listHeaders}\n                style={{ marginTop: 60 }}\n                variant={media.xs ? 'h5' : 'h4'}\n                align=\"center\"\n            >\n                Server Operating Systems\n            </Typography>\n\n            <Divider className={classes.divider} />\n\n            {\n                serverSystems.map((item, index) => {\n                    return (\n                        <Typography\n                            className={classes.listBodys}\n                            align=\"center\"\n                            color=\"textSecondary\"\n                            variant={media.xs ? 'body1' : 'h6'}\n                            key={`server ${index}`}\n                        >\n                            {item.text}\n                        </Typography>\n                    );\n                })\n            }\n\n            <Typography\n                className={classes.listHeaders}\n                style={{ marginTop: 60 }}\n                variant={media.xs ? 'h5' : 'h4'}\n                align=\"center\"\n            >\n                Microsoft Applications\n            </Typography>\n\n            <Divider className={classes.divider} />\n\n            {\n                microsoftApps.map((item, index) => {\n                    return (\n                        <Typography\n                            className={classes.listBodys}\n                            align=\"center\"\n                            color=\"textSecondary\"\n                            variant={media.xs ? 'body1' : 'h6'}\n                            key={`micro ${index}`}\n                        >\n                            {item.text}\n                        </Typography>\n                    );\n                })\n            }\n\n            <Typography\n                className={classes.listHeaders}\n                style={{ marginTop: 60 }}\n                variant={media.xs ? 'h5' : 'h4'}\n                align=\"center\"\n            >\n                Miscellaneous Applications\n            </Typography>\n\n            <Divider className={classes.divider} />\n\n            {\n                miscApps.map((item, index) => {\n                    return (\n                        <Typography\n                            className={classes.listBodys}\n                            align=\"center\"\n                            color=\"textSecondary\"\n                            variant={media.xs ? 'body1' : 'h6'}\n                            key={`misc ${index}`}\n                        >\n                            {item.text}\n                        </Typography>\n                    );\n                })\n            }\n\n        </Grid>\n    );\n};\n\nexport default TechList;"]},"metadata":{},"sourceType":"module"}