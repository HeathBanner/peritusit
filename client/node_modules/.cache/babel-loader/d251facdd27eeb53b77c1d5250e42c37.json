{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/peritusit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/peritusit/client/src/components/Navigation/Drawer.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, Button, List, ListItem, ListItemIcon, ListItemText, Icon } from '@material-ui/core';\nvar useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\n\nvar TempDrawer = function TempDrawer() {\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var toggleDrawer = function toggleDrawer(open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      setState(open);\n    };\n  };\n\n  var sideList = function sideList() {\n    return React.createElement(\"div\", {\n      className: classes.list,\n      role: \"presentation\",\n      onClick: toggleDrawer(false),\n      onKeyDown: toggleDrawer(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map(function (text, index) {\n      return React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, index % 2 === 0 ? React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"inbox\") : React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"mail\")), React.createElement(ListItemText, {\n        primary: text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    })));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggleDrawer(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Open Left\"), React.createElement(Drawer, {\n    open: state,\n    onClose: toggleDrawer(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, sideList('left')));\n};\n\nexport default TempDrawer;","map":{"version":3,"sources":["/Users/God/Desktop/github/peritusit/client/src/components/Navigation/Drawer.js"],"names":["React","useState","makeStyles","Drawer","Button","List","ListItem","ListItemIcon","ListItemText","Icon","useStyles","list","width","fullList","TempDrawer","classes","state","setState","toggleDrawer","open","event","type","key","sideList","map","text","index"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,QADJ,QAEO,OAFP;AAIA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SACIC,MADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,QAJJ,EAKIC,YALJ,EAMIC,YANJ,EAOIC,IAPJ,QAQO,mBARP;AAUA,IAAMC,SAAS,GAAGR,UAAU,CAAC;AAC3BS,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADqB;AAI3BC,EAAAA,QAAQ,EAAE;AACRD,IAAAA,KAAK,EAAE;AADC;AAJiB,CAAD,CAA5B;;AASA,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,OAAO,GAAGL,SAAS,EAAzB;;AADuB,kBAEGT,QAAQ,CAAC,KAAD,CAFX;AAAA;AAAA,MAEhBe,KAFgB;AAAA,MAETC,QAFS;;AAIvB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA,WAAU,UAAAC,KAAK,EAAI;AACtC,UAAIA,KAAK,CAACC,IAAN,KAAe,SAAf,KAA6BD,KAAK,CAACE,GAAN,KAAc,KAAd,IAAuBF,KAAK,CAACE,GAAN,KAAc,OAAlE,CAAJ,EAAgF;AAC9E;AACD;;AACDL,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KALoB;AAAA,GAArB;;AAOA,MAAMI,QAAQ,GAAG,SAAXA,QAAW;AAAA,WACf;AACE,MAAA,SAAS,EAAER,OAAO,CAACJ,IADrB;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,OAAO,EAAEO,YAAY,CAAC,KAAD,CAHvB;AAIE,MAAA,SAAS,EAAEA,YAAY,CAAC,KAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,OAAD,EAAU,SAAV,EAAqB,YAArB,EAAmC,QAAnC,EAA6CM,GAA7C,CAAiD,UAACC,IAAD,EAAOC,KAAP;AAAA,aAChD,oBAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeC,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAlB,GAAuC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAtD,CADF,EAEE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADgD;AAAA,KAAjD,CADH,CANF,CADe;AAAA,GAAjB;;AAkBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEP,YAAY,CAAC,IAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAGE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEF,KAAd;AAAqB,IAAA,OAAO,EAAEE,YAAY,CAAC,KAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,QAAQ,CAAC,MAAD,CADX,CAHF,CADF;AAUD,CAvCD;;AAyCA,eAAeT,UAAf","sourcesContent":["import React, {\n    useState,\n} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n    Drawer,\n    Button,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Icon,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nconst TempDrawer = () => {\n  const classes = useStyles();\n  const [state, setState] = useState(false);\n\n  const toggleDrawer = (open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState(open);\n  };\n\n  const sideList = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <Icon>inbox</Icon> : <Icon>mail</Icon>}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <Button onClick={toggleDrawer(true)}>Open Left</Button>\n\n      <Drawer open={state} onClose={toggleDrawer(false)}>\n        {sideList('left')}\n      </Drawer>\n\n    </div>\n  );\n};\n\nexport default TempDrawer;"]},"metadata":{},"sourceType":"module"}