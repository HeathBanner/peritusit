{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/peritusit/client/src/components/Tech/TechList.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Divider } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap',\n      padding: 40,\n      paddingTop: 100,\n      backgroundColor: 'white'\n    },\n    divider: {\n      marginBlockStart: '0.5em',\n      width: '60%',\n      backgroundColor: 'rgb(0, 0, 0, 0.2)',\n      marginBottom: 40\n    },\n    listHeaders: {\n      width: '100%'\n    },\n    listBodys: {\n      width: '100%',\n      marginBottom: 10\n    }\n  };\n});\nvar desktopSystems = [{\n  text: \"Windows 10\"\n}, {\n  text: \"Windows 8 & 8.1\"\n}, {\n  text: \"Windows 7\"\n}];\nvar serverSystems = [{\n  text: \"Windows Server 2016\"\n}, {\n  text: \"Windows Server 2012\"\n}, {\n  text: \"Windows Server 2008\"\n}, {\n  text: \"Windows Terminal Server/Remote Desktop Services\"\n}, {\n  text: \"Windows Hyper V\"\n}];\nvar microsoftApps = [{\n  text: \"Office 365 and 2013\"\n}, {\n  text: \"Office 2010\"\n}];\nvar miscApps = [{\n  text: \"QuickBooks\"\n}, {\n  text: \"ACT\"\n}, {\n  text: \"Time Matters\"\n}, {\n  text: \"Sage 50\"\n}];\n\nvar TechList = function TechList() {\n  var classes = useStyles();\n  return React.createElement(Grid, {\n    className: classes.container,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.listHeaders,\n    variant: \"h5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Desktop Operating Systems\"), React.createElement(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), desktopSystems.map(function (item) {\n    return React.createElement(Typography, {\n      className: classes.listBodys,\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, item.text);\n  }), React.createElement(Typography, {\n    className: classes.listHeaders,\n    variant: \"h5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Server Operating Systems\"), React.createElement(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), serverSystems.map(function (item) {\n    return React.createElement(Typography, {\n      className: classes.listBodys,\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, item.text);\n  }), React.createElement(Typography, {\n    className: classes.listHeaders,\n    variant: \"h5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Microsoft Applications\"), React.createElement(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), microsoftApps.map(function (item) {\n    return React.createElement(Typography, {\n      className: classes.listBodys,\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, item.text);\n  }), React.createElement(Typography, {\n    className: classes.listHeaders,\n    variant: \"h5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Miscellaneous Applications\"), React.createElement(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), miscApps.map(function (item) {\n    return React.createElement(Typography, {\n      className: classes.listBodys,\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, item.text);\n  }));\n};\n\nexport default TechList;","map":{"version":3,"sources":["/Users/God/Desktop/github/peritusit/client/src/components/Tech/TechList.js"],"names":["React","makeStyles","Grid","Typography","Divider","useStyles","theme","container","display","justifyContent","alignItems","alignContent","flexWrap","padding","paddingTop","backgroundColor","divider","marginBlockStart","width","marginBottom","listHeaders","listBodys","desktopSystems","text","serverSystems","microsoftApps","miscApps","TechList","classes","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACIC,IADJ,EAEIC,UAFJ,EAGIC,OAHJ,QAIO,mBAJP;AAMA,IAAMC,SAAS,GAAGJ,UAAU,CAAC,UAACK,KAAD;AAAA,SAAY;AACrCC,IAAAA,SAAS,EAAE;AACPC,MAAAA,OAAO,EAAE,MADF;AAEPC,MAAAA,cAAc,EAAE,QAFT;AAGPC,MAAAA,UAAU,EAAE,QAHL;AAIPC,MAAAA,YAAY,EAAE,QAJP;AAKPC,MAAAA,QAAQ,EAAE,MALH;AAMPC,MAAAA,OAAO,EAAE,EANF;AAOPC,MAAAA,UAAU,EAAE,GAPL;AAQPC,MAAAA,eAAe,EAAE;AARV,KAD0B;AAWrCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,gBAAgB,EAAE,OADb;AAELC,MAAAA,KAAK,EAAE,KAFF;AAGLH,MAAAA,eAAe,EAAE,mBAHZ;AAILI,MAAAA,YAAY,EAAE;AAJT,KAX4B;AAiBrCC,IAAAA,WAAW,EAAE;AACTF,MAAAA,KAAK,EAAE;AADE,KAjBwB;AAoBrCG,IAAAA,SAAS,EAAE;AACPH,MAAAA,KAAK,EAAE,MADA;AAEPC,MAAAA,YAAY,EAAE;AAFP;AApB0B,GAAZ;AAAA,CAAD,CAA5B;AA0BA,IAAMG,cAAc,GAAG,CACnB;AACIC,EAAAA,IAAI;AADR,CADmB,EAInB;AACIA,EAAAA,IAAI;AADR,CAJmB,EAOnB;AACIA,EAAAA,IAAI;AADR,CAPmB,CAAvB;AAYA,IAAMC,aAAa,GAAG,CAClB;AACID,EAAAA,IAAI;AADR,CADkB,EAIlB;AACIA,EAAAA,IAAI;AADR,CAJkB,EAOlB;AACIA,EAAAA,IAAI;AADR,CAPkB,EAUlB;AACIA,EAAAA,IAAI;AADR,CAVkB,EAalB;AACIA,EAAAA,IAAI;AADR,CAbkB,CAAtB;AAkBA,IAAME,aAAa,GAAG,CAClB;AACIF,EAAAA,IAAI;AADR,CADkB,EAIlB;AACIA,EAAAA,IAAI;AADR,CAJkB,CAAtB;AASA,IAAMG,QAAQ,GAAG,CACb;AACIH,EAAAA,IAAI;AADR,CADa,EAIb;AACIA,EAAAA,IAAI;AADR,CAJa,EAOb;AACIA,EAAAA,IAAI;AADR,CAPa,EAUb;AACIA,EAAAA,IAAI;AADR,CAVa,CAAjB;;AAeA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAEnB,MAAMC,OAAO,GAAGvB,SAAS,EAAzB;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEuB,OAAO,CAACrB,SAAzB;AAAoC,IAAA,IAAI,MAAxC;AAAyC,IAAA,EAAE,EAAE,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAEqB,OAAO,CAACR,WADvB;AAEI,IAAA,OAAO,EAAC,IAFZ;AAGI,IAAA,KAAK,EAAC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,EAUI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEQ,OAAO,CAACZ,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAaQM,cAAc,CAACO,GAAf,CAAmB,UAACC,IAAD,EAAU;AACzB,WACI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAEF,OAAO,CAACP,SADvB;AAEI,MAAA,KAAK,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKS,IAAI,CAACP,IAJV,CADJ;AAQH,GATD,CAbR,EAyBI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAEK,OAAO,CAACR,WADvB;AAEI,IAAA,OAAO,EAAC,IAFZ;AAGI,IAAA,KAAK,EAAC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAzBJ,EAiCI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEQ,OAAO,CAACZ,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCJ,EAoCQQ,aAAa,CAACK,GAAd,CAAkB,UAACC,IAAD,EAAU;AACxB,WACI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAEF,OAAO,CAACP,SADvB;AAEI,MAAA,KAAK,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKS,IAAI,CAACP,IAJV,CADJ;AAQH,GATD,CApCR,EAgDI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAEK,OAAO,CAACR,WADvB;AAEI,IAAA,OAAO,EAAC,IAFZ;AAGI,IAAA,KAAK,EAAC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAhDJ,EAwDI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEQ,OAAO,CAACZ,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDJ,EA2DQS,aAAa,CAACI,GAAd,CAAkB,UAACC,IAAD,EAAU;AACxB,WACI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAEF,OAAO,CAACP,SADvB;AAEI,MAAA,KAAK,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKS,IAAI,CAACP,IAJV,CADJ;AAQH,GATD,CA3DR,EAuEI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAEK,OAAO,CAACR,WADvB;AAEI,IAAA,OAAO,EAAC,IAFZ;AAGI,IAAA,KAAK,EAAC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAvEJ,EA+EI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEQ,OAAO,CAACZ,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/EJ,EAkFQU,QAAQ,CAACG,GAAT,CAAa,UAACC,IAAD,EAAU;AACnB,WACI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAEF,OAAO,CAACP,SADvB;AAEI,MAAA,KAAK,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKS,IAAI,CAACP,IAJV,CADJ;AAQH,GATD,CAlFR,CADJ;AAiGH,CArGD;;AAuGA,eAAeI,QAAf","sourcesContent":["import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    Typography,\n    Divider,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n        padding: 40,\n        paddingTop: 100,\n        backgroundColor: 'white',\n    },\n    divider: {\n        marginBlockStart: '0.5em',\n        width: '60%',\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n        marginBottom: 40,\n    },\n    listHeaders: {\n        width: '100%'\n    },\n    listBodys: {\n        width: '100%',\n        marginBottom: 10,\n    },\n}));\n\nconst desktopSystems = [\n    {\n        text: `Windows 10`,\n    },\n    {\n        text: `Windows 8 & 8.1`,\n    },\n    {\n        text: `Windows 7`,\n    },\n];\n\nconst serverSystems = [\n    {\n        text: `Windows Server 2016`,\n    },\n    {\n        text: `Windows Server 2012`,\n    },\n    {\n        text: `Windows Server 2008`,\n    },\n    {\n        text: `Windows Terminal Server/Remote Desktop Services`,\n    },\n    {\n        text: `Windows Hyper V`,\n    },\n];\n\nconst microsoftApps = [\n    {\n        text: `Office 365 and 2013`,\n    },\n    {\n        text:  `Office 2010`,\n    },\n];\n\nconst miscApps = [\n    {\n        text:  `QuickBooks`,\n    },\n    {\n        text: `ACT`,\n    },\n    {\n        text: `Time Matters`,\n    },\n    {\n        text:  `Sage 50`,\n    },\n];\n\nconst TechList = () => {\n\n    const classes = useStyles();\n\n    return (\n        <Grid className={classes.container} item xs={12}>\n\n            <Typography\n                className={classes.listHeaders}\n                variant=\"h5\"\n                align=\"center\"\n            >\n                Desktop Operating Systems\n            </Typography>\n\n            <Divider className={classes.divider} />\n\n            {\n                desktopSystems.map((item) => {\n                    return (\n                        <Typography\n                            className={classes.listBodys}\n                            align=\"center\"\n                        >\n                            {item.text}\n                        </Typography>\n                    );\n                })\n            }\n\n            <Typography\n                className={classes.listHeaders}\n                variant=\"h5\"\n                align=\"center\"\n            >\n                Server Operating Systems\n            </Typography>\n\n            <Divider className={classes.divider} />\n\n            {\n                serverSystems.map((item) => {\n                    return (\n                        <Typography\n                            className={classes.listBodys}\n                            align=\"center\"\n                        >\n                            {item.text}\n                        </Typography>\n                    );\n                })\n            }\n\n            <Typography\n                className={classes.listHeaders}\n                variant=\"h5\"\n                align=\"center\"\n            >\n                Microsoft Applications\n            </Typography>\n\n            <Divider className={classes.divider} />\n\n            {\n                microsoftApps.map((item) => {\n                    return (\n                        <Typography\n                            className={classes.listBodys}\n                            align=\"center\"\n                        >\n                            {item.text}\n                        </Typography>\n                    );\n                })\n            }\n\n            <Typography\n                className={classes.listHeaders}\n                variant=\"h5\"\n                align=\"center\"\n            >\n                Miscellaneous Applications\n            </Typography>\n\n            <Divider className={classes.divider} />\n\n            {\n                miscApps.map((item) => {\n                    return (\n                        <Typography\n                            className={classes.listBodys}\n                            align=\"center\"\n                        >\n                            {item.text}\n                        </Typography>\n                    );\n                })\n            }\n\n        </Grid>\n    );\n};\n\nexport default TechList;"]},"metadata":{},"sourceType":"module"}