{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/peritusit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/peritusit/client/src/components/Pricing/MidSection.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Divider, List, ListItem, ListItemText, Collapse, Icon } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap',\n      padding: 40,\n      paddingTop: 100,\n      backgroundColor: 'white',\n      color: '#0000a2'\n    },\n    divider: {\n      marginBlockStart: '0.5em',\n      width: '60%',\n      backgroundColor: 'rgb(0, 0, 0, 0.2)',\n      marginBottom: 60\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n      color: 'black'\n    }\n  };\n});\nvar onSiteList = [{\n  text: \"New computer installation\"\n}, {\n  text: \"E-Mail setup\"\n}, {\n  text: \"Software installation\"\n}, {\n  text: \"Data backup and migrations\"\n}, {\n  text: \"Network toubleshooting\"\n}, {\n  text: \"Network Storage Device installation\"\n}, {\n  text: \"Server installations and migrations\"\n}, {\n  text: \"Network printers/scanner deployments\"\n}, {\n  text: \"Router/Firewall configuration\"\n}, {\n  text: \"Fiber/Cable/T1 implementations\"\n}];\n\nvar MidSection = function MidSection() {\n  var classes = useStyles();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      onsite = _useState2[0],\n      setOnsite = _useState2[1];\n\n  return React.createElement(Grid, {\n    className: classes.container,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"We offer various levels of service\"), React.createElement(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    onClick: function onClick() {\n      return setOnsite(!onsite);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: \"Onsite servcie at an hourly rate of $95.00 billed to the  1/2 hour. Some examples of onsite services would be:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, onsite ? 'expand_less' : 'expand_more')), React.createElement(Collapse, {\n    in: onsite,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, onSiteList.map(function (item) {\n    return React.createElement(ListItem, {\n      className: classes.nested,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: item.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }))));\n};\n\nexport default MidSection;","map":{"version":3,"sources":["/Users/God/Desktop/github/peritusit/client/src/components/Pricing/MidSection.js"],"names":["React","useState","makeStyles","Grid","Typography","Divider","List","ListItem","ListItemText","Collapse","Icon","useStyles","theme","container","display","justifyContent","alignItems","alignContent","flexWrap","padding","paddingTop","backgroundColor","color","divider","marginBlockStart","width","marginBottom","nested","paddingLeft","spacing","onSiteList","text","MidSection","classes","onsite","setOnsite","map","item"],"mappings":"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","sourcesContent":["import React, {\n    useState,\n} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    Typography,\n    Divider,\n    List,\n    ListItem,\n    ListItemText,\n    Collapse,\n    Icon,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n        padding: 40,\n        paddingTop: 100,\n        backgroundColor: 'white',\n        color: '#0000a2',\n    },\n    divider: {\n        marginBlockStart: '0.5em',\n        width: '60%',\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n        marginBottom: 60,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n        color: 'black',\n    }\n}));\n\nconst onSiteList = [\n    {\n        text: `New computer installation`,\n    },\n    {\n        text: `E-Mail setup`,\n    },\n    {\n        text: `Software installation`,\n    },\n    {\n        text: `Data backup and migrations`,\n    },\n    {\n        text: `Network toubleshooting`,\n    },\n    {\n        text: `Network Storage Device installation`,\n    },\n    {\n        text: `Server installations and migrations`,\n    },\n    {\n        text: `Network printers/scanner deployments`,\n    },\n    {\n        text: `Router/Firewall configuration`,\n    },\n    {\n        text: `Fiber/Cable/T1 implementations`,\n    },\n];\n\nconst MidSection = () => {\n    \n    const classes = useStyles();\n\n    const [onsite, setOnsite] = useState(true);\n\n    return (\n        <Grid className={classes.container} item xs={12}>\n\n            <Typography>\n                We offer various levels of service\n            </Typography>\n\n            <Divider className={classes.divider} />\n\n            <List>\n\n                <ListItem\n                    button\n                    onClick={() => setOnsite(!onsite)}\n                >\n                    <ListItemText\n                        primary=\"Onsite servcie at an hourly rate of $95.00 billed to the \n                        1/2 hour. Some examples of onsite services would be:\"\n                    />\n                    <Icon>{onsite ? 'expand_less' : 'expand_more'}</Icon>\n                </ListItem>\n                <Collapse in={onsite} timeout=\"auto\" unmountOnExit>\n                    {\n                        onSiteList.map((item) => {\n                            return (\n                                <ListItem className={classes.nested}>\n                                    <ListItemText\n                                        primary={item.text}\n                                    />\n                                </ListItem>\n                            )\n                        })\n                    }\n                </Collapse>\n\n            </List>\n\n        </Grid>\n    );\n};\n\nexport default MidSection;"]},"metadata":{},"sourceType":"module"}