{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/peritusit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/God/Desktop/github/peritusit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/peritusit/client/src/components/Contact/Form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { MediaContext } from '../../context/Media';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography, Divider, TextField, Button } from '@material-ui/core';\nimport SuccessNotification from '../Notifications/SuccessNotification';\nimport ErrorNotification from '../Notifications/ErrorNotification';\nimport WarningNotification from '../Notifications/WarningNotification';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 40,\n      paddingTop: 100,\n      height: '100vh',\n      backgroundColor: 'white'\n    },\n    paper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap',\n      padding: 20,\n      color: '#0000a2'\n    },\n    header: {\n      width: '100%'\n    },\n    divider: {\n      marginBlockStart: '0.5em',\n      width: '60%',\n      marginBottom: 20,\n      backgroundColor: 'rgb(0, 0, 0, 0.2)'\n    },\n    textFields: {\n      width: '100%',\n      marginBottom: 20\n    },\n    button: {\n      padding: 10,\n      width: '100%',\n      backgroundColor: '#0000a2',\n      color: 'white'\n    }\n  };\n});\nvar initInfo = {\n  name: '',\n  email: '',\n  message: ''\n};\nvar initNotifications = {\n  open: false,\n  message: ''\n};\n\nvar Form = function Form() {\n  var classes = useStyles();\n  var media = useContext(MediaContext);\n\n  var _useState = useState(_objectSpread({}, initInfo)),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState(_objectSpread({}, initNotifications)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      success = _useState4[0],\n      setSuccess = _useState4[1];\n\n  var _useState5 = useState(_objectSpread({}, initNotifications)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(_objectSpread({}, initNotifications)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      warning = _useState8[0],\n      setWarning = _useState8[1];\n\n  var closeError = function closeError() {\n    setError(_objectSpread({}, initNotifications));\n  };\n\n  var closeSuccess = function closeSuccess() {\n    setSuccess(_objectSpread({}, initNotifications));\n  };\n\n  var closeWarning = function closeWarning() {\n    setWarning(_objectSpread({}, initNotifications));\n  };\n\n  var preSubmit = function preSubmit() {\n    switch (true) {\n      case info.name.length < 1:\n        return setWarning({\n          open: true,\n          message: 'Name must have at least 2 characters'\n        });\n\n      case info.email.length < 2:\n        return setWarning({\n          open: true,\n          message: 'Incorrect email!'\n        });\n\n      case info.message.length < 2:\n        return setWarning({\n          open: true,\n          message: 'Message must have at least 2 characters!'\n        });\n\n      default:\n        return handleSubmit();\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    fetch('/api/contact', {\n      method: 'POST',\n      body: JSON.stringify(info),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (!result) {\n        return setError({\n          open: true,\n          message: 'Something went wrong!'\n        });\n      }\n\n      setSuccess({\n        open: true,\n        message: result.message\n      });\n      setInfo(_objectSpread({}, initInfo));\n    }).catch(function () {\n      setError({\n        open: true,\n        message: 'Something went wrong!'\n      });\n    });\n  };\n\n  return React.createElement(Grid, {\n    className: classes.container,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.header,\n    variant: media.xs ? 'h4' : 'h3',\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Contact Us\"), React.createElement(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.textFields,\n    variant: \"outlined\",\n    label: \"Name\",\n    value: info.name,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.textFields,\n    variant: \"outlined\",\n    label: \"Email\",\n    value: info.email,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        email: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.textFields,\n    variant: \"outlined\",\n    label: \"Message\",\n    rows: \"5\",\n    multiline: true,\n    value: info.message,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        message: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    onClick: preSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(SuccessNotification, {\n    success: success,\n    closeSuccess: closeSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), React.createElement(ErrorNotification, {\n    error: error,\n    closeError: closeError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), React.createElement(WarningNotification, {\n    warning: warning,\n    closeWarning: closeWarning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/God/Desktop/github/peritusit/client/src/components/Contact/Form.js"],"names":["React","useState","useContext","MediaContext","makeStyles","Grid","Paper","Typography","Divider","TextField","Button","SuccessNotification","ErrorNotification","WarningNotification","useStyles","theme","container","display","justifyContent","alignItems","padding","paddingTop","height","backgroundColor","paper","alignContent","flexWrap","color","header","width","divider","marginBlockStart","marginBottom","textFields","button","initInfo","name","email","message","initNotifications","open","Form","classes","media","info","setInfo","success","setSuccess","error","setError","warning","setWarning","closeError","closeSuccess","closeWarning","preSubmit","length","handleSubmit","fetch","method","body","JSON","stringify","headers","then","res","json","result","catch","xs","e","target","value"],"mappings":"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","sourcesContent":["import React, {\n    useState,\n    useContext,\n} from 'react';\n\nimport { MediaContext } from '../../context/Media';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    Paper,\n    Typography,\n    Divider,\n    TextField,\n    Button,\n} from '@material-ui/core';\n\nimport SuccessNotification from '../Notifications/SuccessNotification';\nimport ErrorNotification from '../Notifications/ErrorNotification';\nimport WarningNotification from '../Notifications/WarningNotification';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 40,\n        paddingTop: 100,\n        height: '100vh',\n        backgroundColor: 'white',\n    },\n    paper: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n        padding: 20,\n        color: '#0000a2',    \n    },\n    header: {\n        width: '100%',\n    },\n    divider: {\n        marginBlockStart: '0.5em',\n        width: '60%',\n        marginBottom: 20,\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n    },\n    textFields: {\n        width: '100%',\n        marginBottom: 20,\n    },\n    button: {\n        padding: 10,\n        width: '100%',\n        backgroundColor: '#0000a2',\n        color: 'white',\n    },\n}));\n\nconst initInfo = {\n    name: '',\n    email: '',\n    message: '',\n};\n\nconst initNotifications = {\n    open: false,\n    message: '',\n};\n\nconst Form = () => {\n\n    const classes = useStyles();\n    const media = useContext(MediaContext);\n\n    const [info, setInfo] = useState({ ...initInfo });\n    const [success, setSuccess] = useState({ ...initNotifications });\n    const [error, setError] = useState({ ...initNotifications });\n    const [warning, setWarning] = useState({ ...initNotifications });\n\n    const closeError = () => { setError({ ...initNotifications }); };\n    const closeSuccess = () => { setSuccess({ ...initNotifications }); };\n    const closeWarning = () => { setWarning({ ...initNotifications }); };\n\n    const preSubmit = () => {\n        switch (true) {\n            case info.name.length < 1:\n                return setWarning({\n                    open: true,\n                    message: 'Name must have at least 2 characters'\n                })\n            case info.email.length < 2:\n                return setWarning({\n                    open: true,\n                    message: 'Incorrect email!',\n                });\n            case info.message.length < 2:\n                return setWarning({\n                    open: true,\n                    message: 'Message must have at least 2 characters!',\n                });\n            default:\n                return handleSubmit();\n        }\n    };\n\n    const handleSubmit = () => {\n        fetch('/api/contact', {\n            method: 'POST',\n            body: JSON.stringify(info),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (!result) {\n                    return setError({\n                        open: true,\n                        message: 'Something went wrong!',\n                    });\n                }\n                setSuccess({\n                    open: true,\n                    message: result.message,\n                });\n                setInfo({ ...initInfo });\n            })\n            .catch(() => {\n                setError({\n                    open: true,\n                    message: 'Something went wrong!',\n                });\n            });\n    };\n\n    return (\n        <Grid className={classes.container} item xs={12}>\n\n            <Paper className={classes.paper}>\n\n                <Typography\n                    className={classes.header}\n                    variant={media.xs ? 'h4' : 'h3'}\n                    align=\"center\"\n                >\n                    Contact Us\n                </Typography>\n\n                <Divider className={classes.divider} />\n\n                <TextField\n                    className={classes.textFields}\n                    variant=\"outlined\"\n                    label=\"Name\"\n                    value={info.name}\n                    onChange={(e) => setInfo({ ...info, name: e.target.value})}\n                />\n\n                <TextField\n                    className={classes.textFields}\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    value={info.email}\n                    onChange={(e) => setInfo({ ...info, email: e.target.value})}\n                />\n\n                <TextField\n                    className={classes.textFields}\n                    variant=\"outlined\"\n                    label=\"Message\"\n                    rows=\"5\"\n                    multiline\n                    value={info.message}\n                    onChange={(e) => setInfo({ ...info, message: e.target.value})}\n                />\n\n                <Button\n                    className={classes.button}\n                    onClick={preSubmit}\n                >\n                    <Typography>\n                        Submit\n                    </Typography>\n                </Button>\n\n            </Paper>\n\n            <SuccessNotification\n                success={success}\n                closeSuccess={closeSuccess}\n            />\n            <ErrorNotification\n                error={error}\n                closeError={closeError}\n            />\n            <WarningNotification\n                warning={warning}\n                closeWarning={closeWarning}\n            />\n\n        </Grid>\n    );\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}