{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/peritusit/client/src/components/Services/AdditionalServices.js\";\nimport React, { useContext } from 'react';\nimport { MediaContext } from '../../context/Media';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, List, ListItem, ListItemText, ListItemAvatar, Icon, Divider } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap',\n      padding: 40,\n      paddingTop: 100,\n      backgroundColor: '#0000a2',\n      color: 'white'\n    },\n    listHeader: {\n      width: '100%'\n    },\n    divider: {\n      marginBlockStart: '0.5em',\n      width: '60%',\n      marginBottom: 40,\n      backgroundColor: 'rgb(0, 0, 0, 0.2)'\n    }\n  };\n});\nvar additionalList = [{\n  text: \"Onsite Service and Troubleshooting\",\n  icon: 'live_help'\n}, {\n  text: \"Shop Service\",\n  icon: 'local_hospital'\n}, {\n  text: \"Network Printer & Scanner Setup\",\n  icon: 'scanner'\n}, {\n  text: \"E-Mail and Acceptable Use Policies\",\n  icon: 'policy'\n}, {\n  text: \"Remote and Managed Services\",\n  icon: 'network_check'\n}, {\n  text: \"Network Cabling\",\n  icon: 'account_tree'\n}, {\n  text: \"Backup and Disaster Recovery Solutions\",\n  icon: 'storage'\n}, {\n  text: \"Hardware and Software Sales \",\n  icon: 'monetization_on'\n}];\n\nvar AdditionalServices = function AdditionalServices() {\n  var classes = useStyles();\n  var media = useContext(MediaContext);\n  return React.createElement(Grid, {\n    className: classes.container,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.listHeader,\n    align: \"center\",\n    variant: media.xs ? 'h5' : 'h4',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Additional Services\"), React.createElement(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, additionalList.map(function (item) {\n    return React.createElement(ListItem, {\n      key: item.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, item.icon)), React.createElement(ListItemText, {\n      primary: item.text,\n      primaryTypographyProps: {\n        variant: media.xs ? 'body1' : 'h6'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  })));\n};\n\nexport default AdditionalServices;","map":{"version":3,"sources":["/Users/God/Desktop/github/peritusit/client/src/components/Services/AdditionalServices.js"],"names":["React","useContext","MediaContext","makeStyles","Grid","Typography","List","ListItem","ListItemText","ListItemAvatar","Icon","Divider","useStyles","theme","container","display","justifyContent","alignItems","alignContent","flexWrap","padding","paddingTop","backgroundColor","color","listHeader","width","divider","marginBlockStart","marginBottom","additionalList","text","icon","AdditionalServices","classes","media","xs","map","item","variant"],"mappings":"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","sourcesContent":["import React, {\n    useContext,\n} from 'react';\n\nimport { MediaContext } from '../../context/Media';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    Typography,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemAvatar,\n    Icon,\n    Divider,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n        padding: 40,\n        paddingTop: 100,\n        backgroundColor: '#0000a2',\n        color: 'white',\n    },\n    listHeader: {\n        width: '100%',\n    },\n    divider: {\n        marginBlockStart: '0.5em',\n        width: '60%',\n        marginBottom: 40,\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n    },\n}));\n\nconst additionalList = [\n    {\n        text: `Onsite Service and Troubleshooting`,\n        icon: 'live_help',\n    },\n    {\n        text: `Shop Service`,\n        icon: 'local_hospital',\n    },\n    {\n        text: `Network Printer & Scanner Setup`,\n        icon: 'scanner',\n    },\n    {\n        text: `E-Mail and Acceptable Use Policies`,\n        icon: 'policy',\n    },\n    {\n        text: `Remote and Managed Services`,\n        icon: 'network_check',\n    },\n    {\n        text: `Network Cabling`,\n        icon: 'account_tree',\n    },\n    {\n        text: `Backup and Disaster Recovery Solutions`,\n        icon: 'storage'\n    },\n    {\n        text: `Hardware and Software Sales `,\n        icon: 'monetization_on',\n    },\n];\n\nconst AdditionalServices = () => {\n\n    const classes = useStyles();\n    const media = useContext(MediaContext);\n\n    return (\n        <Grid className={classes.container} item xs={12}>\n\n            <Typography\n                className={classes.listHeader}\n                align=\"center\"\n                variant={media.xs ? 'h5' : 'h4'}\n            >\n                Additional Services\n            </Typography>\n\n            <Divider className={classes.divider} />\n\n            <List>\n                {\n                    additionalList.map((item) => {\n                        return (\n                            <ListItem key={item.text}>\n\n                                <ListItemAvatar>\n                                    <Icon>\n                                        {item.icon}\n                                    </Icon>\n                                </ListItemAvatar>\n\n                                <ListItemText\n                                    primary={item.text}\n                                    primaryTypographyProps={{\n                                        variant: media.xs ? 'body1' : 'h6'\n                                    }}\n                                />\n\n                            </ListItem>\n                        );\n                    })\n                }\n            </List>\n\n        </Grid>\n    );\n};\n\nexport default AdditionalServices;"]},"metadata":{},"sourceType":"module"}