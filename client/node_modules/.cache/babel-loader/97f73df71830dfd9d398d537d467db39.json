{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/peritusit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/peritusit/client/src/components/Navigation/Drawer.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, Button, List, ListItem, ListItemIcon, ListItemText, Icon } from '@material-ui/core';\nvar useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  button: {\n    padding: 10,\n    minWidth: 0\n  },\n  icon: {\n    color: 'white'\n  },\n  iconTrigger: {\n    color: '#0000a2'\n  },\n  links: {\n    textDecoration: 'none',\n    color: 'inherit',\n    ':&hover': {\n      textDecoration: 'none',\n      color: 'inherit'\n    }\n  }\n});\nvar drawerContent = [{\n  text: 'Home',\n  icon: 'home',\n  link: '/home'\n}, {\n  text: 'About',\n  icon: 'account_circle',\n  link: '/about'\n}, {\n  text: 'Services',\n  icon: 'developer_mode',\n  link: '/services'\n}, {\n  text: 'Strategy',\n  icon: 'insert_chart',\n  link: '/strategy'\n}, {\n  text: 'Pricing',\n  icon: 'local_atm',\n  link: '/pricing'\n}, {\n  text: 'Technologies',\n  icon: 'timeline',\n  link: '/technologies'\n}, {\n  text: 'Partnerships',\n  icon: 'group',\n  link: '/partnerships'\n}, {\n  text: 'Testimonials',\n  icon: 'chat',\n  link: '/testimonials'\n}, {\n  text: 'Contact Us',\n  icon: 'phone',\n  link: '/contact'\n}];\n\nvar TempDrawer = function TempDrawer(props) {\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var toggleDrawer = function toggleDrawer(open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      setState(open);\n    };\n  };\n\n  var sideList = function sideList() {\n    return React.createElement(\"div\", {\n      className: classes.list,\n      role: \"presentation\",\n      onClick: toggleDrawer(false),\n      onKeyDown: toggleDrawer(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, drawerContent.map(function (item) {\n      return React.createElement(\"a\", {\n        className: classes.links,\n        href: item.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        key: item.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, item.icon)), React.createElement(ListItemText, {\n        primary: item.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })));\n    })));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    onClick: toggleDrawer(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    className: props.trigger ? classes.iconTrigger : classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"menu\")), React.createElement(Drawer, {\n    open: state,\n    onClose: toggleDrawer(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, sideList('left')));\n};\n\nexport default TempDrawer;","map":{"version":3,"sources":["/Users/God/Desktop/github/peritusit/client/src/components/Navigation/Drawer.js"],"names":["React","useState","makeStyles","Drawer","Button","List","ListItem","ListItemIcon","ListItemText","Icon","useStyles","list","width","button","padding","minWidth","icon","color","iconTrigger","links","textDecoration","drawerContent","text","link","TempDrawer","props","classes","state","setState","toggleDrawer","open","event","type","key","sideList","map","item","trigger"],"mappings":"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","sourcesContent":["import React, {\n    useState,\n} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Drawer,\n    Button,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Icon,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  button: {\n    padding: 10,\n    minWidth: 0,\n  },\n  icon: {\n    color: 'white',\n  },\n  iconTrigger: {\n    color: '#0000a2',\n  },\n  links: {\n    textDecoration: 'none',\n    color: 'inherit',\n    ':&hover': {\n      textDecoration: 'none',\n      color: 'inherit',\n    },\n  },\n});\n\nconst drawerContent = [\n  {\n    text: 'Home',\n    icon: 'home',\n    link: '/home',\n  },\n  {\n    text: 'About',\n    icon: 'account_circle',\n    link: '/about',\n  },\n  {\n    text: 'Services',\n    icon: 'developer_mode',\n    link: '/services',\n  },\n  {\n    text: 'Strategy',\n    icon: 'insert_chart',\n    link: '/strategy',\n  },\n  {\n    text: 'Pricing',\n    icon: 'local_atm',\n    link: '/pricing',\n  },\n  {\n    text: 'Technologies',\n    icon: 'timeline',\n    link: '/technologies',\n  },\n  {\n    text: 'Partnerships',\n    icon: 'group',\n    link: '/partnerships',\n  },\n  {\n    text: 'Testimonials',\n    icon: 'chat',\n    link: '/testimonials',\n  },\n  {\n    text: 'Contact Us',\n    icon: 'phone',\n    link: '/contact',\n  },\n];\n\nconst TempDrawer = (props) => {\n  const classes = useStyles();\n  const [state, setState] = useState(false);\n\n  const toggleDrawer = (open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState(open);\n  };\n\n  const sideList = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        {\n          drawerContent.map((item) => (\n            <a\n              className={classes.links}\n              href={item.link}\n            >\n              <ListItem button key={item.text}>\n                <ListItemIcon>\n                  <Icon>\n                    {item.icon}\n                  </Icon>\n                </ListItemIcon>\n                <ListItemText primary={item.text} />\n              </ListItem>\n            </a>\n          ))\n        }\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n        <Button\n            className={classes.button}\n            onClick={toggleDrawer(true)}\n        >\n            <Icon className={props.trigger ? classes.iconTrigger : classes.icon}>\n                menu\n            </Icon>\n        </Button>\n\n        <Drawer open={state} onClose={toggleDrawer(false)}>\n            {sideList('left')}\n        </Drawer>\n    </div>\n  );\n};\n\nexport default TempDrawer;"]},"metadata":{},"sourceType":"module"}